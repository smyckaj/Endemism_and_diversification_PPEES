"Dryopteris_villarii"),names(data))
data=data[,-m]
#FIdata
FIdata=read.csv("FI.csv")
FIdatafilt=FIdata[match(names(data),FIdata$Taxon_FA),]
#endemics only
dataend=data[,which(FIdatafilt$Endemicity==1)]
dataend=dataend[which(spdata$end>0) ,]
#rarity data
rartab=matrix(0,nrow=248,ncol=358)
for(i in 1:358){
for(j in 1:248){
rartab[j,i]=(1/sum(dataend[,j]))*dataend[i,j]
}
}
rartabsort=matrix(0,nrow=248,ncol=358)
for(k in 1:358){
rartabsort[,k]=sort(rartab[,k],decreasing=T)
}
lrartabsort=log(rartabsort)
#jagam
library(mgcv)
spdata$meanaltkm=spdata$newmeanalt/1000
spdata$rangekm=spdata$newrange/1000
spdata$lrar=log(spdata$rar)
spdatafilt=spdata[which(spdata$end!=0),]
jm=jagam((lrar)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdatafilt,file="jagamrar.bug")
jmnew=list(n=jm$jags.data$n,
S1=jm$jags.data$S1,
X=jm$jags.data$X,
zero=jm$jags.data$zero,
nend=colSums(sign(rartabsort)),
lrar=lrartabsort)
#run model
library(rjags)
load("/home/smyckaj/Desktop/Spatial/rargamwd.RData")
msims.rargam=lapply(sims.rargam,as.mcmc.list)
rarscores=summary(msims.rargam$rarmean)[[1]][,1]
rarcoefs=summary(msims.rargam$b)[[1]][,1]
rarsmooth=jmnew$X[,8:36]%*%rarcoefs[8:36]
#linear res rarscoresres=rarscores-rarcoefs[3]*spdatafilt$rangekm-rarcoefs[4]*spdatafilt$rock
#smooth res rarscoresres=rarscores-rarcoefs[3]*spdata$rangekm-rarcoefs[4]*spdata$rock-rarsmooth
#smooth res by categories
rarscoresres=rarscores-rarcoefs[3]*spdatafilt$rangekm-rarcoefs[4]*spdatafilt$rock-rarcoefs[5]*spdatafilt$rocksil-spdatafilt$siref*mean(rarsmooth[which(spdatafilt$siref==1)])-spdatafilt$caref*mean(rarsmooth[which(spdatafilt$caref==1)])-mean(rarsmooth)
#non logit rarscoresres=rarscores/((1-rarscores)*exp(rarcoefs[3]*spdata$rangekm+rarcoefs[4]*spdata$rock)+rarscores)
plot(rarscoresres~spdatafilt$meanaltkm,xlab="mean elevation[km]",ylab="endemics rarity",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdatafilt$meanaltkm[which(spdatafilt$caref==0 & spdatafilt$siref==0)],rarscoresres[which(spdatafilt$caref==0 & spdatafilt$siref==0)],cex=0.5)
points(spdatafilt$meanaltkm[which(spdatafilt$caref==1 & spdatafilt$siref==0)],rarscoresres[which(spdatafilt$caref==1 & spdatafilt$siref==0)],col="blue", pch=2,cex=0.5)
points(spdatafilt$meanaltkm[which(spdatafilt$caref==0 & spdatafilt$siref==1)],rarscoresres[which(spdatafilt$caref==0 & spdatafilt$siref==1)],col="red",pch=6,cex=0.5)
points(spdatafilt$meanaltkm[which(spdatafilt$caref==1 & spdatafilt$siref==1)],rarscoresres[which(spdatafilt$caref==1 & spdatafilt$siref==1)],col="purple",pch=0,cex=0.5)
curve((rarcoefs[1]+x*(rarcoefs[2])),add=T)
curve((rarcoefs[1]+rarcoefs[6]+x*(rarcoefs[2])),add=T,col="blue",lwd=3, lty=6)
curve((rarcoefs[1]+rarcoefs[7]+x*(rarcoefs[2])),add=T,col="red",lty=5)
text(2.4,-4.9,labels="Calc. refugia",col="blue", cex=0.6)
points(1.95,-4.9, pch=2, col="blue",cex=0.7)
text(2.4,-4.97,labels="Silic. refugia",col="red", cex=0.6)
points(1.95,-4.97, pch=6, col="red",cex=0.7)
text(2.4,-5.05,labels="Both refugia",col="purple",cex=0.6)
points(1.95,-5.05, pch=0, col="purple",cex=0.7)
text(2.4,-5.12,labels="No refugia",col="black",cex=0.6)
points(1.95,-5.12, col="black",cex=0.7)
jgs=sim2jam(sims.rargam,jm$pregam)
plot(jgs,se=F,scheme=2,main="",xlab="LON",ylab="LAT",cex.lab=0.6,cex.axis=0.6,hcolors=rev(heat.colors(80)))
points(5.7245,45.1885,pch=16)
text(5.7245+1,45.1885-0.3,labels="Grenoble",cex=0.6)
points(11.4041,47.2692,pch=16)
text(11.4041+1,47.2692-0.3,labels="Innsbruck",cex=0.6)
points(9.1859,45.4654,pch=16)
text(9.1859+1,45.4654-0.3,labels="Milan",cex=0.6)
points(14.5058,46.0569,pch=16)
text(14.5058+0.5,46.0569-0.3,labels="Ljubljana",cex=0.6)
#endemism GAM
############################
#prepare data
############################
setwd("~/Desktop/Spatial")
library(parallel)
#load data
spdata=read.csv("spdata.csv")
data=read.csv("data.csv")
data=data[,-1]
#angiosperms only
m=match(c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"),names(data))
data=data[,-m]
#endemism
FIdata=read.csv("FI.csv")
FIdatafilt=FIdata[match(names(data),FIdata$Taxon_FA),]
#endemics only
dataendnf=data[,which(FIdatafilt$Endemicity==1)]
spdata$endnew=rowSums(dataendnf)
#diversity
spdata$div=rowSums(data)
#jagam
library(mgcv)
library(gtools)
spdata$meanaltkm=spdata$newmeanalt/1000
spdata$rangekm=spdata$newrange/1000
jm=jagam(inv.logit(relend+0.0001)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,file="jagamend.bug")
jmnew=list(n=jm$jags.data$n,
S1=jm$jags.data$S1,
X=jm$jags.data$X,
zero=jm$jags.data$zero,
end=spdata$endnew,
div=spdata$div)
#!!!manually modifyjagam to jagamnew
#run model
library(rjags)
load("/home/smyckaj/Desktop/Spatial/endgamwd.RData")
jgs=sim2jam(sims.endgam,jm$pregam)
plot(jgs,se=F,scheme=2,main="",xlab="LON",ylab="LAT",cex.lab=0.6,cex.axis=0.6, hcolors=rev(heat.colors(80)))
points(5.7245,45.1885,pch=16)
text(5.7245+1,45.1885-0.3,labels="Grenoble",cex=0.6)
points(11.4041,47.2692,pch=16)
text(11.4041+1,47.2692-0.3,labels="Innsbruck",cex=0.6)
points(9.1859,45.4654,pch=16)
text(9.1859+1,45.4654-0.3,labels="Milan",cex=0.6)
points(14.5058,46.0569,pch=16)
text(14.5058+0.5,46.0569-0.3,labels="Ljubljana",cex=0.6)
#PD GAM
#NTND is PD in this script
############################
#prepare data
############################
setwd("~/Desktop/Spatial/ML species trees")
library(ape)
library(parallel)
files=list.files()
trees=list()
for (i in 1:length(files)){
tr=read.tree(files[i])
trees[[i]]=tr
}
setwd("~/Desktop/Spatial")
##getting distribution of mntd
#load data
data=read.csv("data.csv")
row.names(data)=data$X
data=data[,-1]
spdata=read.csv("spdata.csv")
#angiosperms only
m=match(c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"),names(data))
data=data[,-m]
angonly=function(tree){
tree=drop.tip(tree,c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"))
}
mltree=angonly(mltree)
trees=mclapply(trees,angonly,mc.cores = 10)
library(PhyloMeasures)
mntds=function(tree){
datareshuf=data[ ,match(tree$tip.label,names(data))]
mntd=pd.query(tree,datareshuf,standardize=T)
mntd
}
mntds=mclapply(trees,mntds,mc.cores = 10)
mntdsar=simplify2array(mntds)
#distance matrix
dist=as.matrix(dist(cbind(spdata$LON,spdata$LAT),diag=T,upper=T))
library(mgcv)
spdata$meanaltkm=spdata$newmeanalt/1000
spdata$rangekm=spdata$newrange/1000
jm=jagam(sspda~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,file="jagam.bug")
jmnew=list(n=jm$jags.data$n,
S1=jm$jags.data$S1,
X=jm$jags.data$X,
zero=jm$jags.data$zero,
mntd=mntdsar)
library(rjags)
load("/home/smyckaj/Desktop/Spatial/PDgamwd.RData")
msims.mntdgam=lapply(sims.mntdgam,as.mcmc.list)
jgs=sim2jam(sims.mntdgam,jm$pregam)
plot(jgs,se=F,scheme=2,main="",xlab="LON",ylab="LAT",cex.lab=0.6,cex.axis=0.6,hcolors=rev(heat.colors(80)))
points(5.7245,45.1885,pch=16)
text(5.7245+1,45.1885-0.3,labels="Grenoble",cex=0.6)
points(11.4041,47.2692,pch=16)
text(11.4041+1,47.2692-0.3,labels="Innsbruck",cex=0.6)
points(9.1859,45.4654,pch=16)
text(9.1859+1,45.4654-0.3,labels="Milan",cex=0.6)
points(14.5058,46.0569,pch=16)
text(14.5058+0.5,46.0569-0.3,labels="Ljubljana",cex=0.6)
#richness GAM
############################
#prepare data
############################
setwd("~/Desktop/Appendices")
library(parallel)
#load data
spdata=read.csv("spdata.csv")
data=read.csv("data.csv")
data=data[,-1]
#angiosperms only
m=match(c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"),names(data))
data=data[,-m]
#diversity
spdata$div=rowSums(data)
#jagam
library(mgcv)
spdata$meanaltkm=spdata$newmeanalt/1000
spdata$rangekm=spdata$newrange/1000
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family="poisson",file="jagamrich.bug")
#!!!manually modifyjagam to jagamnew
#run model
library(rjags)
load("/home/smyckaj/Desktop/Appendices/richgamwd.RData")
msims.endgam=lapply(sims.endgam,as.mcmc.list)
jgs=sim2jam(sims.endgam,jm$pregam)
plot(jgs,se=F,scheme=2,main="",xlab="LON",ylab="LAT",cex.lab=0.6,cex.axis=0.6,hcolors=rev(heat.colors(80)))
points(5.7245,45.1885,pch=16)
text(5.7245+1,45.1885-0.3,labels="Grenoble",cex=0.6)
points(11.4041,47.2692,pch=16)
text(11.4041+1,47.2692-0.3,labels="Innsbruck",cex=0.6)
points(9.1859,45.4654,pch=16)
text(9.1859+1,45.4654-0.3,labels="Milan",cex=0.6)
points(14.5058,46.0569,pch=16)
text(14.5058+0.5,46.0569-0.3,labels="Ljubljana",cex=0.6)
#richness GAM
############################
#prepare data
############################
setwd("~/Desktop/Appendices")
library(parallel)
#load data
spdata=read.csv("spdata.csv")
data=read.csv("data.csv")
data=data[,-1]
#angiosperms only
m=match(c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"),names(data))
data=data[,-m]
#diversity
spdata$div=rowSums(data)
#jagam
library(mgcv)
spdata$meanaltkm=spdata$newmeanalt/1000
spdata$rangekm=spdata$newrange/1000
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family="poisson",file="jagamrich.bug")
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family="poisson", link="identity",file="jagamrich.bug")
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family=poisson(link="identity"),file="jagamrich.bug")
library(rjags)
load.module("glm")
model.endgam=jags.model("jagamrichover.bug",data=jm$jags.data,n.chains=5)
update(model.endgam,2000)
sims.endgam=jags.samples(model.endgam,c("b","rho","mu","lambda"),n.iter=5000,n.thin=50)
msims.endgam=lapply(sims.endgam,as.mcmc.list)
summary(msims.endgam$b)
plot(msims.endgam$b)
gelman.diag(msims.endgam$b)
jm
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,file="jagamrich.bug")
model.endgam=jags.model("jagamrich.bug",data=jm$jags.data,n.chains=5)
update(model.endgam,2000)
sims.endgam=jags.samples(model.endgam,c("b","rho","mu","lambda"),n.iter=5000,n.thin=50)
msims.endgam=lapply(sims.endgam,as.mcmc.list)
summary(msims.endgam$b)
plot(msims.endgam$b)
gelman.diag(msims.endgam$b)
relendscores=log(summary(msims.endgam$mu)[[1]][,1])
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
par(mfrow=c(1,2))
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
curve((relendcoefs[1]+relendcoefs[6]+x*(relendcoefs[2])),add=T,col="blue",lwd=3, lty=6)
relendscores=summary(msims.endgam$mu)[[1]][,1]
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
curve((relendcoefs[1]+relendcoefs[6]+x*(relendcoefs[2])),add=T,col="blue",lwd=3, lty=6)
curve((relendcoefs[1]+relendcoefs[7]+x*(relendcoefs[2])),add=T,col="red",lwd=3,lty=5)
jm=jagam(exp(div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family="poisson",file="jagamrich.bug")
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,family="poisson",file="jagamrich.bug")
relendscores
jm=jagam((div)~s(LON,LAT)+meanaltkm+rangekm+rock+rocksil+caref+siref,data=spdata,file="jagamrich.bug")
relendscores=jm$y
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
jm$y
jm
relendscores=jm$jags.data$y
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
curve((relendcoefs[1]+relendcoefs[6]+x*(relendcoefs[2])),add=T,col="blue",lwd=3, lty=6)
curve((relendcoefs[1]+relendcoefs[7]+x*(relendcoefs[2])),add=T,col="red",lwd=3,lty=5)
1/40*40
1/(40*40)
model.endgam=jags.model("jagamrichover.bug",data=jm$jags.data,n.chains=5)
update(model.endgam,2000)
sims.endgam=jags.samples(model.endgam,c("b","rho","mu","lambda"),n.iter=5000,n.thin=50)
msims.endgam=lapply(sims.endgam,as.mcmc.list)
summary(msims.endgam$b)
plot(msims.endgam$b)
gelman.diag(msims.endgam$b)
relendscores=jm$jags.data$y
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
relendscores=log(jm$jags.data$y)
relendcoefs=summary(msims.endgam$b)[[1]][,1]
relendsmooth=jm$jags.data$X[,8:36]%*%relendcoefs[8:36]
relendscoresres=relendscores-relendcoefs[3]*spdata$rangekm-relendcoefs[4]*spdata$rock-relendcoefs[5]*spdata$rocksil-spdata$siref*mean(relendsmooth[which(spdata$siref==1)])-spdata$caref*mean(relendsmooth[which(spdata$caref==1)])-mean(relendsmooth)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
library(gtools)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
curve((relendcoefs[1]+relendcoefs[6]+x*(relendcoefs[2])),add=T,col="blue",lwd=3, lty=6)
curve((relendcoefs[1]+relendcoefs[7]+x*(relendcoefs[2])),add=T,col="red",lwd=3,lty=5)
plot(relendscoresres~spdata$meanaltkm,xlab="mean elevation[km]",ylab="log(species richness)",cex=0, cex.lab=0.6,cex.axis=0.6)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==0)],relendscoresres[which(spdata$caref==0 & spdata$siref==0)],cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==0)],relendscoresres[which(spdata$caref==1 & spdata$siref==0)],col="blue", pch=2,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==0 & spdata$siref==1)],relendscoresres[which(spdata$caref==0 & spdata$siref==1)],col="red",pch=6,cex=0.5)
points(spdata$meanaltkm[which(spdata$caref==1 & spdata$siref==1)],relendscoresres[which(spdata$caref==1 & spdata$siref==1)],col="purple",pch=0,cex=0.5)
curve((relendcoefs[1]+x*(relendcoefs[2])),add=T,lwd=3)
curve((relendcoefs[1]+relendcoefs[6]+x*(relendcoefs[2])),add=T,col="blue",lwd=3, lty=6)
curve((relendcoefs[1]+relendcoefs[7]+x*(relendcoefs[2])),add=T,col="red",lwd=3,lty=5)
library(ape)
tb=function(tree){
n<-length(tree$tip.label)
ee<-setNames(tree$edge.length[sapply(1:n,function(x,y)   which(y==x),y=tree$edge[,2])],tree$tip.label)
print(ee)
}
#only angiosperms
angonly=function(tree){
tree=drop.tip(tree,c("Lycopodium_clavatum",
"Diphasiastrum_alpinum",
"Diphasiastrum_oellgaardii",
"Huperzia_selago",
"Isoetes_echinospora",
"Selaginella_selaginoides",
"Pinus_cembra",
"Pinus_mugo",
"Larix_decidua",
"Juniperus_communis",
"Juniperus_sabina",
"Botrychium_simplex",
"Equisetum_arvense",
"Cryptogramma_crispa",
"Asplenium_fissum",
"Asplenium_viride",
"Cystopteris_alpina",
"Cystopteris_montana",
"Woodsia_alpina",
"Woodsia_pulchella",
"Athyrium_distentifolium",
"Polystichum_lonchitis",
"Dryopteris_villarii"))
}
#ml tree
setwd("~/Desktop")
mlt=read.tree("polytre.tre")
length(tb(mlt)<2.58)/length(tb(mlt))
#other trees
setwd("~/Desktop/Spatial/ML species trees")
library(parallel)
files=list.files()
trees=list()
for (i in 1:length(files)){
tr=read.tree(files[i])
trees[[i]]=tr
}
trees=mclapply(trees,angonly,mc.cores = 10)
tbs=mclapply(trees,tb,mc.cores = 10)
utbs=unlist(tbs)
length(which(utbs<2.58))/length(utbs)
length(which(utbs<0.11))/length(utbs)
length(which(utbs<1))/length(utbs)
length(which(utbs<0.2))/length(utbs)
length(which(utbs<0.15))/length(utbs)
length(which(utbs<0.13))/length(utbs)
length(which(utbs<0.12))/length(utbs)
length(which(utbs<0.11))/length(utbs)
